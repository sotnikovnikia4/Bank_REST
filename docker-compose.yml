services:
  accounts-java:
    build: .
    container_name: BankAPI
    ports:
      - "8070:8070"
    depends_on:
      - accounts-mongo
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.data.mongodb.uri": "mongodb://$MONGO_ROOT_USER:$MONGO_ROOT_PASSWORD@accounts-db:27017/$MONGO_DATABASE?authSource=admin",
        "server.error.include.message": "never",
        "jwt_secret": "$JWT_SECRET",
        "security.require-ssl": true,
        "server.ssl.key-store": "$SERVER_SSL_KEY_STORE",
        "server.ssl.key-store-password": "$SERVER_SSL_KEY_STORE_PASSWORD",
        "server.ssl.keyStoreType": "$SERVER_SSL_KEY_STORE_TYPE",
        "server.ssl.keyAlias": "$SERVER_SSL_KEY_ALIAS",
        "server.domain": "$SERVER_DOMAIN",
        "spring.security.oauth2.client.registration.google.client-id": "$GOOGLE_CLIENT_ID",
        "spring.security.oauth2.client.registration.google.client-secret": "$GOOGLE_CLIENT_SECRET",
        "spring.security.oauth2.client.registration.google.redirect-uri": "$OAUTH_CLIENT_REDIRECT_URI",
        "spring.security.oauth2.client.registration.yandex.redirect-uri": "$OAUTH_CLIENT_REDIRECT_URI",
        "spring.security.oauth2.client.registration.yandex.client-id": "$YANDEX_CLIENT_ID",
        "spring.security.oauth2.client.registration.yandex.client-secret": "$YANDEX_CLIENT_SECRET",
        "spring.security.oauth2.client.registration.yandex.client-authentication-method": "client_secret_basic",
        "spring.security.oauth2.client.registration.yandex.provider": "yandex",
        "spring.security.oauth2.client.registration.yandex.authorization-grant-type": "authorization_code",
        "spring.security.oauth2.client.provider.yandex.token-uri": "https://oauth.yandex.ru/token",
        "spring.security.oauth2.client.provider.yandex.authorization-uri": "https://oauth.yandex.ru/authorize",
        "spring.security.oauth2.client.provider.yandex.user-info-uri": "https://login.yandex.ru/info",
        "spring.security.oauth2.client.provider.yandex.user-name-attribute": "login",
        "cookieHelper.secure": true,
        "cors.allowedOrigins": "$CORS_ALLOWED_ORIGINS"
      }'
    env_file: ".env"

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=users_db'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - ':5432'
    container_name: users-db
    volumes:
      - user-data:/var/lib/postgresql/data

volumes:
  user-data: